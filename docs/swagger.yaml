openapi: 3.0.0
info:
  version: 1.0.0
  title: BlogMaster API
  description: BlogMaster API documentation
servers:
  - url: http://localhost:14080/api
paths:
  /posts:
    get:
      summary: List all posts
      tags:
        - Posts
      responses:
        '200':
          description: A list of posts
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/Post'
    post:
      summary: Create a new post
      tags:
        - Posts
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/PostInput'
      responses:
        '201':
          description: The created post
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Post'
  /posts/{id}:
    get:
      summary: Get a post by ID
      tags:
        - Posts
      parameters:
        - name: id
          in: path
          required: true
          schema:
            type: integer
      responses:
        '200':
          description: The post data
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Post'
    put:
      summary: Update a post by ID
      tags:
        - Posts
      parameters:
        - name: id
          in: path
          required: true
          schema:
            type: integer
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/PostInput'
      responses:
        '200':
          description: The updated post
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Post'
    delete:
      summary: Delete a post by ID
      tags:
        - Posts
      parameters:
        - name: id
          in: path
          required: true
          schema:
            type: integer
      responses:
        '200':
          description: A message confirming the deletion
          content:
            application/json:
              schema:
                type: object
                properties:
                  message:
                    type: string
  /comments:
    get:
      summary: List all comments
      tags:
        - Comments
      responses:
        '200':
          description: A list of comments
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/Comment'
    post:
      summary: Create a new comment
      tags:
        - Comments
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/CommentInput'
      responses:
        '201':
          description: The created comment
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Comment'
  /comments/{id}:
    get:
      summary: Get a comment by ID
      tags:
        - Comments
      parameters:
        - name: id
          in: path
          required: true
          schema:
            type: integer
      responses:
        '200':
          description: The comment data
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Comment'
    put:
      summary: Update a comment by ID
      tags:
        - Comments
      parameters:
        - name: id
          in: path
          required: true
          schema:
            type: integer
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/CommentInput'
      responses:
        '200':
          description: The updated comment
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Comment'
    delete:
      summary: Delete a comment by ID
      tags:
        - Comments
      parameters:
        - name: id
          in: path
          required: true
          schema:
            type: integer
      responses:
        '200':
          description: A message confirming the deletion
          content:
            application/json:
              schema:
                type: object
                properties:
                  message:
                    type: string
  /categories:
    get:
      summary: List all categories
      tags:
        - Categories
      responses:
        '200':
          description: A list of categories
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/Category'
    post:
      summary: Create a new category
      tags:
        - Categories
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/CategoryInput'
      responses:
        '201':
          description: The created category
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Category'
  /categories/{id}:
    get:
      summary: Get a category by ID
      tags:
        - Categories
      parameters:
        - name: id
          in: path
          required: true
          schema:
            type: integer
      responses:
        '200':
          description: The category data
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Category'
    put:
      summary: Update a category by ID
      tags:
        - Categories
      parameters:
        - name: id
          in: path
          required: true
          schema:
            type: integer
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/CategoryInput'
      responses:
        '200':
          description: The updated category
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Category'
    delete:
      summary: Delete a category by ID
      tags:
        - Categories
      parameters:
        - name: id
          in: path
          required: true
          schema:
            type: integer
      responses:
        '200':
          description: A message confirming the deletion
          content:
            application/json:
              schema:
                type: object
                properties:
                  message:
                    type: string
components:
  schemas:
    Post:
      type: object
      properties:
        id:
          type: integer
        title:
          type: string
        content:
          type: string
        author_first_name:
          type: string
        categories:
          type: array
          items:
            $ref: '#/components/schemas/Category'
        comments:
          type: array
          items:
            $ref: '#/components/schemas/Comment'
        created_at:
          type: string
          format: date-time
        updated_at:
          type: string
          format: date-time
    PostInput:
      type: object
      properties:
        title:
          type: string
        content:
          type: string
        author_first_name:
          type: string
        categories:
          type: array
          items:
            type: integer
    Comment:
      type: object
      properties:
        id:
          type: integer
        post_id:
          type: integer
        message:
          type: string
        email:
          type: string
        created_at:
          type: string
          format: date-time
        updated_at:
          type: string
          format: date-time
    CommentInput:
      type: object
      properties:
        post_id:
          type: integer
        message:
          type: string
        email:
          type: string
    Category:
      type: object
      properties:
        id:
          type: integer
        name:
          type: string
        posts:
          type: array
          items:
            $ref: '#/components/schemas/Post'
        created_at:
          type: string
          format: date-time
        updated_at:
          type: string
          format: date-time
    CategoryInput:
      type: object
      properties:
        name:
          type: string
